import React, { useState, useEffect } from 'react';
import { styles } from '../styles/styles';
import { getProfile, getWallet, getTransactions, depositFunds } from '../services/api';
import { 
  saveProfileData, getProfileData, 
  saveBalanceData, getBalanceData, 
  saveTransactionsData, getTransactionsData, 
  saveProfilePhoto, getProfilePhoto 
} from '../services/db'; // –î–æ–±–∞–≤–∏–ª —Ä–∞–±–æ—Ç—É —Å IndexedDB

const Profile = () => {
  const [isBalanceOpen, setIsBalanceOpen] = useState(false);
  const [isHistoryOpen, setIsHistoryOpen] = useState(false);
  const [profilePhoto, setProfilePhoto] = useState('https://surl.li/uwuvai'); // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ñ–æ—Ç–æ
  const [user, setUser] = useState({
    firstName: '',
    lastName: '',
    email: '',
    phone: '',
  });
  const [balance, setBalance] = useState({});
  const [transactions, setTransactions] = useState([]);
  const [depositAmount, setDepositAmount] = useState('');

// –í useEffect –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö
useEffect(() => {
  const fetchData = async () => {
    try {
      let profileData, walletData, transactionsData, storedPhoto;

      if (navigator.onLine) {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–Ω–ª–∞–π–Ω-–¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö
        profileData = await getProfile();
        setUser({
          firstName: profileData.firstname,
          lastName: profileData.lastname,
          email: profileData.email,
          phone: profileData.phone,
        });
        await saveProfileData(profileData);

        walletData = await getWallet();
        setBalance(walletData);
        await saveBalanceData(walletData);

        transactionsData = await getTransactions();
        setTransactions(transactionsData);
        await saveTransactionsData(transactionsData);
      } else {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ñ—Ñ–ª–∞–π–Ω-–¥–∞–Ω–Ω—ã–µ –∏–∑ IndexedDB
        profileData = await getProfileData();
        if (profileData) {
          setUser({
            firstName: profileData.firstname,
            lastName: profileData.lastname,
            email: profileData.email,
            phone: profileData.phone,
          });
        }

        walletData = await getBalanceData();
        if (walletData) {
          setBalance(walletData);
        }

        transactionsData = await getTransactionsData();
        if (transactionsData) {
          setTransactions(transactionsData);
        }
      }

      // üì∏ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –∏–∑ IndexedDB, –∏—Å–ø–æ–ª—å–∑—É—è email
      storedPhoto = await getProfilePhoto(user.email); // –¢–µ–ø–µ—Ä—å –ø–æ email
      if (storedPhoto) {
        setProfilePhoto(storedPhoto);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
    }
  };

  fetchData();
}, [user.email]); // –î–æ–±–∞–≤–∏–ª –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç user.email

// –í –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ Profile
const handleUploadPhoto = async () => {
  try {
    const fileInput = document.createElement('input');
    fileInput.type = 'file';
    fileInput.accept = 'image/*';
    fileInput.onchange = async (e) => {
      const file = e.target.files[0];
      if (file && user.email) { // –ò—Å–ø–æ–ª—å–∑—É–µ–º user.email
        const reader = new FileReader();
        reader.onload = async (event) => {
          const newPhoto = event.target.result;
          setProfilePhoto(newPhoto);
          await saveProfilePhoto(user.email, newPhoto); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ email
        };
        reader.readAsDataURL(file);
      }
    };
    fileInput.click();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ:', error);
  }
};

  // üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
  const handleDeposit = async () => {
    if (!depositAmount || isNaN(depositAmount) || depositAmount <= 0) {
      alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è');
      return;
    }

    try {
      await depositFunds(parseFloat(depositAmount));
      const walletData = await getWallet();
      setBalance(walletData); // –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Å—å –æ–±—ä–µ–∫—Ç –±–∞–ª–∞–Ω—Å–∞
      alert('–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω');
      setDepositAmount('');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å');
    }
  };

  return (
    <div style={styles.profileContainer}>
      {/* –ë–ª–æ–∫ —Å —Ñ–æ—Ç–æ –∏ –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      <div style={styles.profileSection}>
        <div style={{ display: 'flex', alignItems: 'center', gap: '20px' }}>
          <img src={profilePhoto} alt="–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è" style={styles.profilePhoto} />
          <div>
            <h2 style={styles.profileName}>{user.firstName} {user.lastName}</h2>
            <p style={styles.profileEmail}>{user.email}</p>
            <p style={styles.profilePhone}>{user.phone}</p>
          </div>
        </div>
        <button onClick={handleUploadPhoto} style={styles.uploadButton}>
          –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ
        </button>
      </div>

      {/* –ë–ª–æ–∫ —Å –±–∞–ª–∞–Ω—Å–æ–º */}
      <div style={styles.profileSection}>
        <div
          style={styles.profileSectionHeader}
          onClick={() => setIsBalanceOpen(!isBalanceOpen)}
        >
          <h3 style={styles.profileSectionTitle}>–ë–∞–ª–∞–Ω—Å</h3>
          <span>{isBalanceOpen ? '‚ñ≤' : '‚ñº'}</span>
        </div>
        {isBalanceOpen && (
          <div style={styles.profileSectionContent}>
            {balance && Object.keys(balance).map((currency) => (
              <p key={currency}>
                {currency}: {balance[currency]}
              </p>
            ))}
            <div style={{ marginTop: '10px' }}>
              <input
                type="number"
                value={depositAmount}
                onChange={(e) => setDepositAmount(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É"
                style={{ padding: '5px', marginRight: '10px' }}
              />
              <button onClick={handleDeposit} style={styles.uploadButton}>
                –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å
              </button>
            </div>
          </div>
        )}
      </div>

      {/* –ë–ª–æ–∫ —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π */}
      <div style={styles.profileSection}>
        <div
          style={styles.profileSectionHeader}
          onClick={() => setIsHistoryOpen(!isHistoryOpen)}
        >
          <h3 style={styles.profileSectionTitle}>–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</h3>
          <span>{isHistoryOpen ? '‚ñ≤' : '‚ñº'}</span>
        </div>
        {isHistoryOpen && (
          <div style={styles.profileSectionContent}>
            {transactions.map((transaction) => (
              <div key={transaction.id} style={{ marginBottom: '10px' }}>
                <p><strong>{transaction.timestamp}</strong>: {transaction.amount} {transaction.currency_code}</p>
                <p>{transaction.transaction_type}</p>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default Profile;
